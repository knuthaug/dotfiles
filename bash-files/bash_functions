alias what-to-push="git diff --stat origin/master HEAD"
alias lg="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ci) %C(bold blue)<%an>%Creset' --abbrev-commit"

#git flow
alias gff="git flow feature"
alias gfr="git flow release"
alias gfh="git flow hotfix"
alias gfs="git flow support"
alias gc="git commit"
alias rebase-me="git rebase -i \$(git merge-base HEAD master)"

#git reflow
alias reflow="git reflow"
alias startbranch="git reflow start"
alias review="git reflow review"
alias deliver="git reflow deliver"

alias gp="git pull"
alias gpp="git pull && git push"
alias gcom="git commit"
alias master="git checkout master"
alias goto="git checkout"
alias glog="git log --oneline --decorate"

alias mkdir="mkdir -pv"
#alias ls="ls -lap"

#kubernetes
alias k="kubectl"
#alias "kc"="kubectl config use-context"

function kc() {
  #echo "1=$1"
  #echo "2=$2"
  if [ "$1" == "set" ]; then
    kubectl config use-context $2
  else 
    kubectl config current-context
  fi
}

alias debug-head="GET -Sed -H 'X-Debug: true' "
alias debug-head="GET -Sed -H 'X-Debug: true' "
alias debug-head="GET -Sed -H 'X-Debug: true'"

alias antlr4='java -jar /usr/local/lib/antlr-4.5.3-complete.jar'
alias grun='java org.antlr.v4.gui.TestRig'


function docker_cleanup() {
  docker images --no-trunc| grep none | awk '{print $3}' | xargs -r docker rmi -f
}

function clean() {
    find . -name \*~ | xargs rm
    find . -name #\* | xargs rm
    find . -name \.#\* | xargs rm
}

function get_branch() {
    branch=`git status| grep 'On branch' | cut -f 4 -d' '`
    if [ -z $branch ] 
    then
        echo "master"
    else
        echo $branch 
    fi
}


function bcuke() {
    bundle exec cucumber $*
}

function brake() {
    bundle exec rake $*
}

function btest() {
    bundle exec rspec
}

function gcom() {
    echo "committing changes for all previously tracked files"
    git commit -a
}

function gpush() {
    branch=`get_branch`
    echo "pushing to origin branch $branch"
    git push origin $branch

}
function gpull() {
    branch=`get_branch`
    echo "pulling from origin branch $branch"
    git pull origin $branch    
}

function gfm() {
    git fetch origin master
}

function mod() {
    svn status -u | egrep '^M'
}


function refresh() {
    cd .. 
    minstall
    cd $1-webapp
    runjetty
} 

function riak-get() {
    curl -s http://127.0.0.1:8098/buckets/$1/keys/$2
}

function riak-delete() {
    curl -X DELETE http://127.0.0.1:8098/buckets/$1/keys/$2
}

function riak-keys() {
    curl -s http://127.0.0.1:8098/buckets/$1/keys?keys=true
}

